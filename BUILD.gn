# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# These sources could live in one or more generally available libraries.
# They are common to all apps in this directory.
common_sources = [
    "arch.h",
    "breakpoint.cc",
    "breakpoint.h",
    "dso-list.cc",
    "dso-list.h",
    "elf-reader.cc",
    "elf-reader.h",
    "exception-port.cc",
    "exception-port.h",
    "io-loop.cc",
    "io-loop.h",
    "memory.h",
    "memory-process.cc",
    "memory-process.h",
    "process.cc",
    "process.h",
    "registers.cc",
    "registers.h",
    "server.cc",
    "server.h",
    "thread.cc",
    "thread.h",
    "util.cc",
    "util.h",
]

if (current_cpu == "x64") {
  arch_sources = [
    "arch-amd64.cc",
    "arch-x86.h",
    "breakpoint-amd64.cc",
    "registers-amd64.cc",
    "x86-cpuid.cc",
    "x86-cpuid.h",
  ]
} else if (current_cpu == "arm64") {
  arch_sources = [
    "arch-arm64.cc",
    "breakpoint-arm64.cc",
    "registers-arm64.cc",
  ]
} else {
  arch_sources = [
    "arch-default.cc",
    "breakpoint-default.cc",
    "registers-default.cc",
  ]
}

executable("gdbserver") {
  # This is called debugserver and not gdbserver because it is not intended
  # to be gdb specific. E.g., The GDB Remote Serial Protocol is used by other
  # debuggers, e.g., lldb.
  # TODO(dje): Rename directory and reorganize when things settle a bit.
  output_name = "debugserver"

  sources = common_sources
  sources += arch_sources

  sources += [
    "rsp-cmd-handler.cc",
    "rsp-cmd-handler.h",
    "rsp-io-loop.cc",
    "rsp-io-loop.h",
    "rsp-main.cc",
    "rsp-server.cc",
    "rsp-server.h",
    "stop-reply-packet.cc",
    "stop-reply-packet.h",
    "thread-action-list.cc",
    "thread-action-list.h",
  ]

  deps = [
    "//lib/ftl",
    "//lib/mtl",
    "//magenta/system/ulib/mx",
  ]

  libs = [
    "launchpad",
    "magenta",
  ]
}

group("tests") {
  testonly = true

  deps = [
    ":gdbserver-unittests",
    "test-apps",
  ]
}

executable("gdbserver-unittests") {
  testonly = true

  sources = [
    "stop-reply-packet.cc",
    "stop-reply-packet.h",
    "stop-reply-packet-unittest.cc",
    "test/run-all-unittests.cc",
    "thread-action-list.cc",
    "thread-action-list.h",
    "thread-action-list-unittest.cc",
    "util.cc",
    "util.h",
    "util-unittest.cc",
  ]

  deps = [
    "//lib/ftl",
    "//third_party/gtest",
  ]

  libs = [
    "magenta",
  ]
}
